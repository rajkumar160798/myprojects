void createOrReplaceBigQueryTableWithColumns(String fileName, String datasetName, String tableName, List<String> selectedColumns);

    @Override
    public void createOrReplaceBigQueryTableWithColumns(String fileName, String datasetName, String tableName, List<String> selectedColumns) {
        String gcsFilePath = "gs://" + bucketName + "/" + fileName;
        TableId tableId = TableId.of("your-project-id", datasetName, tableName);

        // Define the schema based on selected columns
        Schema schema = Schema.of(selectedColumns.stream()
                .map(column -> Field.of(column, StandardSQLTypeName.STRING)) // Assume all columns are of type STRING
                .collect(Collectors.toList()));

        LoadJobConfiguration loadConfig = LoadJobConfiguration.newBuilder(tableId, gcsFilePath)
                .setSchema(schema)
                .setFormatOptions(FormatOptions.csv())
                .setWriteDisposition(JobInfo.WriteDisposition.WRITE_TRUNCATE)
                .build();

        try {
            Job job = bigQuery.create(JobInfo.of(loadConfig));
            job = job.waitFor();
            if (job.isDone()) {
                System.out.println("Table created/replaced successfully with selected columns: " + datasetName + "." + tableName);
            } else {
                throw new RuntimeException("BigQuery create table job failed: " + job.getStatus().getError());
            }
        } catch (InterruptedException e) {
            throw new RuntimeException("BigQuery job was interrupted", e);
        }
    }

@PostMapping("/create-table")
public String createBigQueryTable(@RequestParam("dataset") String datasetName,
                                  @RequestParam("table") String tableName,
                                  @RequestParam(value = "columns", required = false) List<String> selectedColumns,
                                  RedirectAttributes redirectAttributes) {
    try {
        if (selectedColumns == null || selectedColumns.isEmpty()) {
            storageService.createOrReplaceBigQueryTable(uploadedFileName, datasetName, tableName);
        } else {
            storageService.createOrReplaceBigQueryTableWithColumns(uploadedFileName, datasetName, tableName, selectedColumns);
        }
        redirectAttributes.addFlashAttribute("message", "Table created successfully.");
    } catch (Exception e) {
        redirectAttributes.addFlashAttribute("message", "Error: " + e.getMessage());
    }
    return "redirect:/";
}

<head>
    <title>File Upload & BigQuery Table Creation</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="icon" type="image/vnd.microsoft.icon" href="https://www.aetna.com/content/dam/aetna/asset-libraries/logos/favicon-violet-heart-32x32.png">
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #f8f9fa, #d1c4e9);
        }
        .header {
            background-color: #6b2d87;
            color: white;
            padding: 1rem;
            text-align: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
        }
        .upload-container, .table-container {
            background-color: #f4f3f8;
            padding: 2rem;
            border-radius: 10px;
            max-width: 800px;
            margin: 100px auto 50px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .drop-zone {
            border: 2px dashed #7d3f98;
            padding: 1rem;
            cursor: pointer;
            background-color: #ffffff;
            margin-bottom: 1rem;
            border-radius: 10px;
        }
        .drop-zone:hover {
            background-color: #f8e1ff;
        }
        .btn-submit, .btn-select-columns {
            background-color: #7d3f98;
            color: white;
            border: none;
            padding: 0.5rem 1.5rem;
            border-radius: 5px;
            margin-top: 1rem;
        }
        .btn-submit:hover, .btn-select-columns:hover {
            background-color: #6b2d87;
        }
        .column-container {
            margin-top: 1rem;
        }
        footer {
            background-color: #4d0f68ea;
            color: white;
            text-align: center;
            padding: 1rem;
            position: relative;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>File Upload & BigQuery Table Creation</h1>
    </div>
    <div class="upload-container">
        <h2>Upload Files to GCS Bucket</h2>
        <form method="POST" enctype="multipart/form-data" action="/" id="uploadForm">
            <div class="drop-zone" id="dropZone">
                <p>Drag & Drop File Here or Click to Upload</p>
                <input type="file" id="file" name="file" style="display: none;" required>
            </div>
            <button type="submit" class="btn-submit">Upload</button>
        </form>
    </div>
    <div class="table-container">
        <h2>Create/Replace BigQuery Table</h2>
        <form id="createTableForm" method="POST" action="/create-table">
            <label for="dataset" class="form-label">Dataset Name</label>
            <input type="text" id="dataset" name="dataset" placeholder="Dataset Name" class="form-control mb-2" required>
            <label for="table" class="form-label">Table Name</label>
            <input type="text" id="table" name="table" placeholder="Table Name" class="form-control mb-2" required>
            <button type="button" class="btn-select-columns" onclick="toggleColumnSelection()">Select Specific Columns</button>
            <div id="columnContainer" class="hidden column-container">
                <p>Select Columns:</p>
                <div id="columnsPlaceholder"></div>
            </div>
            <button type="submit" class="btn-submit mt-3">Create Table</button>
        </form>
    </div>
    <footer>
        <p>&copy; 2024 AH Reports Inc.</p>
    </footer>
    <script>
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('file');
        const columnContainer = document.getElementById('columnContainer');
        const columnsPlaceholder = document.getElementById('columnsPlaceholder');
        const createTableForm = document.getElementById('createTableForm');

        dropZone.addEventListener('click', () => fileInput.click());

        dropZone.addEventListener('dragover', (event) => {
            event.preventDefault();
            dropZone.style.backgroundColor = '#f8e1ff';
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.style.backgroundColor = '#ffffff';
        });

        dropZone.addEventListener('drop', (event) => {
            event.preventDefault();
            fileInput.files = event.dataTransfer.files;
        });

        function toggleColumnSelection() {
            if (columnContainer.classList.contains('hidden')) {
                columnContainer.classList.remove('hidden');
                populateColumns(); // Dynamically populate columns when visible
            } else {
                columnContainer.classList.add('hidden');
            }
        }

        function populateColumns() {
            const columns = ['Column1', 'Column2', 'Column3']; // Example column names
            columnsPlaceholder.innerHTML = ''; // Clear existing columns
            columns.forEach(column => {
                const label = document.createElement('label');
                label.textContent = column;

                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.name = 'columns';
                checkbox.value = column;

                label.prepend(checkbox);
                columnsPlaceholder.appendChild(label);
                columnsPlaceholder.appendChild(document.createElement('br'));
            });
        }

        createTableForm.addEventListener('submit', (event) => {
            // You can optionally validate column selection here
        });
    </script>
</body>
</html>